$schema: https://json-schema.org/draft/2020-12/schema
title: Genomic Variations Request Parameters
description: >-
  The request parameters schemas define the atomic parameters used in query
  documents against a variation entity.
  TODO: Variant Scouts => revise (e.g. name & PascalCasing of definitions ...)
type: object

definitions:
  assemblyId:
    description: >-
      Genomic assembly accession and version as RefSqeq assembly accession
      (e.g. "GCF_000001405.39") or a versioned assembly name or synonym such as UCSC
      Genome Browser assembly (e.g. "hg38") or Genome Reference Consortium Human (e.g.
      GRCh38.p13") names.
      TODO: Variant Scouts => revise
    type: string
    examples:
      - GCF_000001405.39
      - hg38
      - GRCh38.p13

  referenceName:
    description: >-
      Sequence id for genomic sequence (e.g. chromosome) in which variant
      coordinates (`start`, `end` ...) are given. Preferably a RefSeqId or 
      alternatively common synonymous or aliases.
      TODO: Variant Scouts => revise (More stringent ID use? New explicit parameter?)
    type: string
    examples:
      - "refseq:NC_000009.12"
      - NC_000009.12
      - Chr9
      - "9"
      - NC_012920.1

  mateName:
    description: >-
      Sequence id for genomic sequence (e.g. chromosome) as in the `referenceName`
      parameter, for use cases describing a fusion event (to a different or
      identical chromosome).
    type: string
    examples:
      - "refseq:NC_000009.12"
      - NC_000009
      - Chr9
      - "9"
      - NC_012920.1

  start:
    description: >-
      Precise or fuzzy start coordinate position(s), allele locus
      (0-based, inclusive).
      * `start` only:
        - for single positions, e.g. the start of a specified sequence
          alteration where the size is given through the specified `alternateBases`
        - typical use are queries for SNV and small InDels
        - the use of `start` without an `end` parameter requires the use of
          `alternateBases`
      * `start` and `end`:
        - for searching any variant falling fully or partially within the range
          between `start` and `end` (a.k.a. "range query")
        - additional use of `variantType` OR `alternateBases` can limit the
          scope of the query
        - by convention, partial overlaps of variants with the indicated genomic
          range are accepted; for specific overlap requirements the 4-parameter
          "Bracket Queries" should be employed
      * 2 values in both `start` and `end` for constructing a "Bracket Query":
        - can be used to match any contiguous genomic interval, e.g. for querying
          imprecise positions
        - identifies all structural variants starting between `start[0]` and `start[1]`,
          and ending between `end[0]` <-> `end[1]`
        - single or double sided precise matches can be achieved by setting
          `start[1]=start[0]+1` and `end[1]=end[0]+1`
      TODO: Variant Scouts => revise (e.g. move documentation to query types) 
    type: array
    items:
      type: integer
      format: int64
      minimum: 0
    minItems: 1
    maxItems: 2

  end:
    description: >-
      Precise or bracketing the end of the variants of interest:
      * (0-based, exclusive) - see `start`
      * for bracket queries, provide 2 values (e.g. [111,222])."
      TODO: Variant Scouts => revise (e.g. move documentation to query types) 
    type: array
    items:
      type: integer
      format: int64
      minimum: 1
    minItems: 0
    maxItems: 2

  alternateBases:
    description: >-
      Sequence of bases for this variation (starting from `start`).
      * Accepted values: [ACGTN]
      * N is a wildcard, that denotes the position of any base and can be used as
        a standalone base of any type or within a partially known sequence. As example,
        a query of `ANNT` the Ns can take take any form of [ACGT] and will match
        `ANNT`, `ACNT`, `ACCT`, `ACGT` ... and so forth.
      * an _empty value_ is used in the case of deletions with the maximally
        trimmed, deleted sequence being indicated in `ReferenceBases`
    type: string
    pattern: ^([ACGTUNRYSWKMBDHV\-\.]*)$

  referenceBases: >-
      Sequence of bases which have been replaced by the variation (from `start`).
      The use of characters is equivalent to the `alternateBases` parameter
    type: string
    pattern: ^([ACGTUNRYSWKMBDHV\-\.]*)$

  variantType:
    description: >-
      The `variantType` is used to query variants which are not defined through
      a sequence of one or more bases using the `alternateBases` parameter.
      Examples here are e.g. structural variants:
      * DUP
        - increased allelic count of material from the genomic region between
          `start` and `end` positions
        - no assumption about the placement of the additional sequences is being
          made (i.e. no _in situ_ requirement as tandem duplications)
      * DEL: deletion of sequence following `start`
      * BND: breakend, i.e. termination of the allele at position `start` or in
        the `startMin` => `startMax` interval, or fusion of the sequence to distant
        partner
      Either `alternateBases` or `variantType` is required, with the exception
      of range queries (single\ `start` and `end` parameters).
    type: string

  variantMinLength:
    description: >-
      * Minimum length in bases of a genomic variant
      * This is an optional parameter without prescribed use. While a length is
        commonly available for structural variants such as copy number variations,
        it is recommended that length based queries should also be supported for
        variants with indicated referenceBases and alternateBases, to enable
        length-specific wildcard queries.
    type: integer
    format: int64
    minimum: 0

  variantMaxLength:
    description: >-
      * Maximum length in bases of a genomic variant.
      * This is an optional parameter without prescribed use. While a length is
        commonly available for structural variants such as copy number variations,
        it is recommended that length based queries should also be supported for
        variants with indicated referenceBases and alternateBases, to enable
        length-specific wildcard queries.
    type: integer
    format: int64
    minimum: 1

  geneId:
    description: >-
      * A gene identifier
      * It is strongly suggested to use a symbol following
        the HGNC (https://www.genenames.org) nomenclature.
    type: string
    examples:
      - BRAF
      - SCN5A

  aminoacidChange:
    description: >-
      Aminoacid alteration in 1 letter format
    type: string
    examples:
      - V600E
      - M734V

  genomicAlleleShortForm:
    description: >-
      Genomic HGVSId descriptor.
    type: string
    examples:
      - NM_004006.2:c.4375C>T
